"""create_base_tables

Revision ID: 3d41861b14a0
Revises: 
Create Date: 2023-09-05 17:13:51.710119

"""
from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "3d41861b14a0"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "operations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_operations_id"), "operations", ["id"], unique=False)
    op.create_index(op.f("ix_operations_name"), "operations", ["name"], unique=False)
    op.create_table(
        "clients",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("cpf", sa.String(), nullable=False),
        sa.Column("birth_date", sa.String(), nullable=False),
        sa.Column("is_enriched", sa.Boolean(), nullable=True),
        sa.Column(
            "pipeline_status",
            sa.Enum(
                "ENTRY",
                "ENRICHMENT",
                "ELIGIBILITY",
                "CONTACT",
                "WAITING_FILL",
                "CONTRACT",
                "GENERAL_VERIFICATION",
                "WAITING_FOR_ANALYZES",
                "IN_QUEUE",
                "WAITING_PAYMENT",
                "COMPLETED_WITH_SUCCESS",
                "COMPLETED_WITH_FAILURE",
                "PENDING_DOCS",
                name="clientpipelinestatus",
            ),
        ),
        sa.Column(
            "source",
            sa.Enum("SPREADSHEET", "LANDING_PAGE", "DIRF", name="clientsource"),
            nullable=False,
        ),
        sa.Column("mother_name", sa.String(), nullable=True),
        sa.Column(
            "document_type",
            sa.Enum("RG", "CNH", "PEP", name="clientdocumenttype"),
            nullable=True,
        ),
        sa.Column("document_file", sa.String(), nullable=True),
        sa.Column("contract_token", sa.String(), nullable=True),
        sa.Column("phone", sa.ARRAY(sa.String()), nullable=True),
        sa.Column("email", sa.ARRAY(sa.String()), nullable=True),
        sa.Column("cep", sa.ARRAY(sa.String()), nullable=True),
        sa.Column("house_number", sa.ARRAY(sa.String()), nullable=True),
        sa.Column("street", sa.ARRAY(sa.String()), nullable=True),
        sa.Column("district", sa.ARRAY(sa.String()), nullable=True),
        sa.Column("city", sa.ARRAY(sa.String()), nullable=True),
        sa.Column("state", sa.ARRAY(sa.String()), nullable=True),
        sa.Column("name_bank", sa.String(), nullable=True),
        sa.Column("number_bank", sa.String(), nullable=True),
        sa.Column("agency", sa.String(), nullable=True),
        sa.Column("number_account", sa.String(), nullable=True),
        sa.Column("code_pix", sa.String(), nullable=True),
        sa.Column(
            "search_irpf_status",
            sa.Enum(
                "NOT_SEARCHED",
                "SEARCHING",
                "SUCCESS",
                "ERROR",
                name="clientsearchirpfstatus",
            ),
            nullable=True,
        ),
        sa.Column("document_address", sa.String(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("email_sended_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "registration_status",
            sa.Enum("PENDING_DOCUMENTS", "FINISHED", name="clientregistrationstatus"),
            nullable=True,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("operation_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["operation_id"],
            ["operations.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("cpf"),
    )
    op.create_index(op.f("ix_clients_id"), "clients", ["id"], unique=False)
    op.create_index(op.f("ix_clients_name"), "clients", ["name"], unique=False)
    op.create_table(
        "motor_runnings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("IN_PROGRESS", "PAUSED", "FINISHED", name="motorrunningstatus"),
            nullable=True,
        ),
        sa.Column(
            "motor_type",
            sa.Enum("ENTRY", "ENRICHMENT", "ELIGIBILITY", name="motortype"),
            nullable=True,
        ),
        sa.Column("operation_id", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["operation_id"],
            ["operations.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_motor_runnings_id"), "motor_runnings", ["id"], unique=False
    )
    op.create_table(
        "client_operations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("year", sa.Integer(), nullable=True),
        sa.Column("salaries", sa.ARRAY(sa.Float()), nullable=True),
        sa.Column("is_elegible", sa.Boolean(), nullable=True),
        sa.Column("refound_amount", sa.Float(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("irpf_situation", sa.String(), nullable=True),
        sa.Column(
            "pipeline_status",
            sa.Enum(
                "ENTRY",
                "ENRICHMENT",
                "ELIGIBILITY",
                "CONTACT",
                "WAITING_FILL",
                "CONTRACT",
                "GENERAL_VERIFICATION",
                "WAITING_FOR_ANALYZES",
                "IN_QUEUE",
                "WAITING_PAYMENT",
                "COMPLETED_WITH_SUCCESS",
                "COMPLETED_WITH_FAILURE",
                "PENDING_DOCS",
                name="clientoperationpipelinestatus",
            ),
            nullable=True,
        ),
        sa.Column("cnpj_payer", sa.String(), nullable=True),
        sa.Column("name_payer", sa.String(), nullable=True),
        sa.Column("previd_official", sa.Integer(), nullable=True),
        sa.Column("tax_received", sa.Float(), nullable=True),
        sa.Column(
            "search_irpf_status",
            sa.Enum(
                "NOT_SEARCHED",
                "SEARCHING",
                "SUCCESS",
                "ERROR",
                name="clientoperationsearchirpfstatus",
            ),
            nullable=True,
        ),
        sa.Column("is_signed", sa.Boolean(), nullable=True),
        sa.Column("sended_fill_ir_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("filled_ir_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("irpf_image", sa.String(), nullable=True),
        sa.Column("client_id", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["client_id"],
            ["clients.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_client_operations_id"), "client_operations", ["id"], unique=False
    )
    op.create_table(
        "notifications",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("is_read", sa.Boolean(), nullable=True),
        sa.Column("text", sa.String(), nullable=True),
        sa.Column(
            "type_alert",
            sa.Enum(
                "WAITING_REGISTER",
                "ERROR_IN_CONSULT_REGISTER",
                "REGISTER_FINISHED",
                "TASK_TO_DO",
                name="notificationtypealert",
            ),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("client_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["client_id"],
            ["clients.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_notifications_id"), "notifications", ["id"], unique=False)
    op.create_table(
        "tasks",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("will_send_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "type_task", sa.Enum("NOTE", "TASK", name="tasktypetask"), nullable=False
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("client_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["client_id"],
            ["clients.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_tasks_id"), "tasks", ["id"], unique=False)
    op.create_table(
        "timelines",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("question", sa.String(), nullable=True),
        sa.Column("answer", sa.String(), nullable=True),
        sa.Column(
            "pipeline_status",
            sa.Enum(
                "ENTRY",
                "ENRICHMENT",
                "ELIGIBILITY",
                "CONTACT",
                "WAITING_FILL",
                "CONTRACT",
                "GENERAL_VERIFICATION",
                "WAITING_FOR_ANALYZES",
                "IN_QUEUE",
                "WAITING_PAYMENT",
                "COMPLETED_WITH_SUCCESS",
                "COMPLETED_WITH_FAILURE",
                "PENDING_DOCS",
                name="timelinepipelinestatus",
            ),
            nullable=True,
        ),
        sa.Column("sended_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "source",
            sa.Enum(
                "SPREADSHEET",
                "LANDING_PAGE",
                "PENDING_REGISTRATION",
                name="timelinesource",
            ),
            nullable=True,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("client_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["client_id"],
            ["clients.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_timelines_id"), "timelines", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_timelines_id"), table_name="timelines")
    op.drop_table("timelines")
    op.drop_index(op.f("ix_tasks_id"), table_name="tasks")
    op.drop_table("tasks")
    op.drop_index(op.f("ix_notifications_id"), table_name="notifications")
    op.drop_table("notifications")
    op.drop_index(op.f("ix_client_operations_id"), table_name="client_operations")
    op.drop_table("client_operations")
    op.drop_index(op.f("ix_motor_runnings_id"), table_name="motor_runnings")
    op.drop_table("motor_runnings")
    op.drop_index(op.f("ix_clients_name"), table_name="clients")
    op.drop_index(op.f("ix_clients_id"), table_name="clients")
    op.drop_table("clients")
    op.drop_index(op.f("ix_operations_name"), table_name="operations")
    op.drop_index(op.f("ix_operations_id"), table_name="operations")
    op.drop_table("operations")
    # ### end Alembic commands ###
